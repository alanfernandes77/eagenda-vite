var l=Object.defineProperty;var c=(r,e,s)=>e in r?l(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var a=(r,e,s)=>(c(r,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerpolicy&&(o.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?o.credentials="include":t.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=s(t);fetch(t.href,o)}})();class u{constructor(){a(this,"localKey");a(this,"localStorage");a(this,"tasks");this.localKey="tasks",this.localStorage=window.localStorage,this.tasks=this.getAll()}saveChanges(){const e=JSON.stringify(this.tasks);this.localStorage.setItem(this.localKey,e)}insert(e){this.tasks.push(e),this.saveChanges()}update(e,s){const i=this.tasks.findIndex(t=>t.id===e);this.tasks[i]={id:e,description:s.description,priority:s.priority,creationDate:s.creationDate},this.saveChanges()}delete(e){this.tasks=this.tasks.filter(s=>s.id!==e),this.saveChanges()}getAll(){const e=this.localStorage.getItem(this.localKey);return e?JSON.parse(e):[]}getById(e){return this.tasks.find(s=>s.id===e)}}export{u as T};
